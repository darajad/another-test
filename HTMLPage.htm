<!doctype html>
<html>
<head>
    <title>test</title>
    <!--  <script src="https://github.com/mrdoob/three.js/raw/master/build/Three.js" type="text/javascript"></script> -->
    <script src="Scripts/jquery-1.4.1.js" type="text/javascript"></script>
    <script src="three.js/Three.js" type="text/javascript"></script>
</head>
<body>
    <!-- three.js container -->
    <div id="container" style="border: 2px solid blue">
    </div>
    <object width="600" height="290" data="http://flashtuts.s3.amazonaws.com/080_DrawingApp/Src/DrawingApp.swf"
        type="application/x-shockwave-flash">
        <param name="src" value="http://flashtuts.s3.amazonaws.com/080_DrawingApp/Src/DrawingApp.swf" />
    </object>
    <!-- info on screen display -->
    <script type="text/javascript">
        // set the scene size
        var WIDTH = 400,
  HEIGHT = 300;

        // set some camera attributes
        var VIEW_ANGLE = 45,
  ASPECT = WIDTH / HEIGHT,
  NEAR = 0.1,
  FAR = 10000;

        // get the DOM element to attach to
        // - assume we've got jQuery to hand
        var $container = $('#container');

        // create a WebGL renderer, camera
        // and a scene
        var renderer = new THREE.WebGLRenderer();
        var camera =
  new THREE.PerspectiveCamera(
    VIEW_ANGLE,
    ASPECT,
    NEAR,
    FAR);

        var scene = new THREE.Scene();

        // add the camera to the scene
        scene.add(camera);

        // the camera starts at 0,0,0
        // so pull it back
        camera.position.z = 300;

        // start the renderer
        renderer.setSize(WIDTH, HEIGHT);

        // attach the render-supplied DOM element
        $container.append(renderer.domElement);

        // set up the sphere vars
        var radius = 50,
    segments = 16,
    rings = 16;

        // create the sphere's material
        var sphereMaterial =
  new THREE.MeshLambertMaterial(
    {
        color: 0xCC0000
    });

        // create a new mesh with
        // sphere geometry - we will cover
        // the sphereMaterial next!
        var sphere = new THREE.Mesh(

  new THREE.SphereGeometry(
    radius,
    segments,
    rings),

  sphereMaterial);

        // add the sphere to the scene
        scene.add(sphere);



        // create a point light
        var pointLight =
  new THREE.PointLight(0xFFFFFF);

        // set its position
        pointLight.position.x = 10;
        pointLight.position.y = 50;
        pointLight.position.z = 130;

        // add to the scene
        scene.add(pointLight);

        renderer.render(scene, camera);
    </script>
</body>
</html>
